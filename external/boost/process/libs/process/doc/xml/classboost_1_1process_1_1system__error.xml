<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="classboost_1_1process_1_1system__error" kind="class" prot="public">
    <compoundname>boost::process::system_error</compoundname>
    <includes refid="exceptions_8hpp" local="no">exceptions.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classboost_1_1process_1_1system__error_15e7309b1225055b5007654937f048e4f" prot="public" static="no">
        <type>NativeErrorCodeType</type>
        <definition>typedef NativeErrorCodeType boost::process::system_error::code_type</definition>
        <argsstring></argsstring>
        <name>code_type</name>
        <briefdescription>
<para>Native type used by the system to report error codes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="59" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1process_1_1system__error_14d68fcf9db75ea2072ef395d857f7e8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::process::system_error::system_error</definition>
        <argsstring>(const std::string &amp;who, const std::string &amp;message, code_type sys_err)</argsstring>
        <name>system_error</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>who</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1process_1_1system__error_15e7309b1225055b5007654937f048e4f" kindref="member">code_type</ref></type>
          <declname>sys_err</declname>
        </param>
        <briefdescription>
<para>Constructs a new exception from a system error code. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs a new exception based on the result of an incorrect or an erroneous system call.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>who</parametername>
</parameternamelist>
<parameterdescription>
<para>String that indicates the class and function where the error was first detected. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>String that describes the error that occurred (typically the system call that failed). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sys_err</parametername>
</parameternamelist>
<parameterdescription>
<para>The system error code that identifies the error. On a POSIX system this is the value of <emphasis>errno</emphasis> and on a Win32 system it is the value returned by GetLastError(). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="82" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1process_1_1system__error_11c110bdb769d9725a8a6f9162a1f5935" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>virtual</type>
        <definition>boost::process::system_error::~system_error</definition>
        <argsstring>(void)</argsstring>
        <name>~system_error</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Virtual destructor that does nothing. </para>        </briefdescription>
        <detaileddescription>
<para>Virtual destructor. Does nothing special but is required because of the parent&apos;s class destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="90" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1process_1_1system__error_18e84aa2d663b46cf31cfb178f8d06097" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classboost_1_1process_1_1system__error_15e7309b1225055b5007654937f048e4f" kindref="member">code_type</ref></type>
        <definition>system_error::code_type boost::process::system_error::code</definition>
        <argsstring>(void) const </argsstring>
        <name>code</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Returns the native error code. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the exception&apos;s native error code; that is, the value provided by the operating system when it reported the error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="98" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="153" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1process_1_1system__error_156851629004cada9c87ccb116b1a9237" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>const char * boost::process::system_error::what</definition>
        <argsstring>(void) const </argsstring>
        <name>what</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Returns a formatted message for the exception. </para>        </briefdescription>
        <detaileddescription>
<para>Generates and returns a formatted error message for the native error code attached to this exception. This includes the function that raised the error, the system call where it was initiated and the reason for the failure. The last is determined by strerror() in POSIX systems and FormatMessage under Win32.</para><para><simplesect kind="return"><para>A constant C string containing the formatted error message. The caller must not release it. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="112" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="164" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1process_1_1system__error_1dffeecd2afa6eb6c09a5fc8f1ba338d1" prot="private" static="no" mutable="no">
        <type><ref refid="classboost_1_1process_1_1system__error_15e7309b1225055b5007654937f048e4f" kindref="member">code_type</ref></type>
        <definition>code_type boost::process::system_error::m_sys_err</definition>
        <argsstring></argsstring>
        <name>m_sys_err</name>
        <briefdescription>
<para>Native error code for this exception. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="118" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1process_1_1system__error_1a938dc531f6bab8313f668f4ca155d74" prot="private" static="no" mutable="yes">
        <type>std::string</type>
        <definition>std::string boost::process::system_error::m_message</definition>
        <argsstring></argsstring>
        <name>m_message</name>
        <briefdescription>
<para>Formatted error message for this exception. </para>        </briefdescription>
        <detaileddescription>
<para>This string contains the formatted error message for this exception. It is mutable because it is lazily initialized by the <ref refid="classboost_1_1process_1_1system__error_156851629004cada9c87ccb116b1a9237" kindref="member">what()</ref> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="127" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Run time error initiated in a system call. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classboost_1_1process_1_1system__error" kindref="compound">system_error</ref> exception wraps the information generated by an operating system error. These errors are the result of incorrect or erroneous system calls. </para>    </detaileddescription>
    <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="53" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="51" bodyend="128"/>
    <listofallmembers>
      <member refid="classboost_1_1process_1_1system__error_18e84aa2d663b46cf31cfb178f8d06097" prot="public" virt="virtual"><scope>boost::process::system_error</scope><name>code</name></member>
      <member refid="classboost_1_1process_1_1system__error_15e7309b1225055b5007654937f048e4f" prot="public" virt="non-virtual"><scope>boost::process::system_error</scope><name>code_type</name></member>
      <member refid="classboost_1_1process_1_1system__error_1a938dc531f6bab8313f668f4ca155d74" prot="private" virt="non-virtual"><scope>boost::process::system_error</scope><name>m_message</name></member>
      <member refid="classboost_1_1process_1_1system__error_1dffeecd2afa6eb6c09a5fc8f1ba338d1" prot="private" virt="non-virtual"><scope>boost::process::system_error</scope><name>m_sys_err</name></member>
      <member refid="classboost_1_1process_1_1system__error_14d68fcf9db75ea2072ef395d857f7e8e" prot="public" virt="non-virtual"><scope>boost::process::system_error</scope><name>system_error</name></member>
      <member refid="classboost_1_1process_1_1system__error_156851629004cada9c87ccb116b1a9237" prot="public" virt="virtual"><scope>boost::process::system_error</scope><name>what</name></member>
      <member refid="classboost_1_1process_1_1system__error_11c110bdb769d9725a8a6f9162a1f5935" prot="public" virt="virtual"><scope>boost::process::system_error</scope><name>~system_error</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
