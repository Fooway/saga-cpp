<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="posix__child_8hpp" kind="file">
    <compoundname>posix_child.hpp</compoundname>
    <includes refid="config_8hpp" local="no">boost/process/config.hpp</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">map</includes>
    <includes refid="child_8hpp" local="no">boost/process/child.hpp</includes>
    <includes local="no">boost/process/detail/pipe.hpp</includes>
    <includes local="no">boost/process/detail/posix_ops.hpp</includes>
    <includes refid="pistream_8hpp" local="no">boost/process/pistream.hpp</includes>
    <includes refid="postream_8hpp" local="no">boost/process/postream.hpp</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <includedby refid="posix__launcher_8hpp" local="no">/tmp/process.016638aa/process/boost/process/posix_launcher.hpp</includedby>
    <incdepgraph>
      <node id="225">
        <label>boost/process/detail/pipe.hpp</label>
      </node>
      <node id="234">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="223">
        <label>boost/process/child.hpp</label>
        <link refid="child_8hpp"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>boost/process/pistream.hpp</label>
        <link refid="pistream_8hpp"/>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>boost/process/status.hpp</label>
        <link refid="status_8hpp"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="222">
        <label>map</label>
      </node>
      <node id="232">
        <label>ostream</label>
      </node>
      <node id="224">
        <label>boost/assert.hpp</label>
      </node>
      <node id="231">
        <label>boost/process/postream.hpp</label>
        <link refid="postream_8hpp"/>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>cstdlib</label>
      </node>
      <node id="218">
        <label>/tmp/process.016638aa/process/boost/process/posix_child.hpp</label>
        <link refid="posix_child.hpp"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>boost/config.hpp</label>
      </node>
      <node id="229">
        <label>boost/process/detail/file_handle.hpp</label>
      </node>
      <node id="235">
        <label>boost/process/detail/posix_ops.hpp</label>
      </node>
      <node id="230">
        <label>boost/process/detail/systembuf.hpp</label>
      </node>
      <node id="219">
        <label>boost/process/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="220" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>istream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="237">
        <label>/tmp/process.016638aa/process/boost/process/posix_launcher.hpp</label>
        <link refid="posix__launcher_8hpp"/>
      </node>
      <node id="236">
        <label>/tmp/process.016638aa/process/boost/process/posix_child.hpp</label>
        <link refid="posix_child.hpp"/>
        <childnode refid="237" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classboost_1_1process_1_1posix__child" prot="public">boost::process::posix_child</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1process">boost::process</innernamespace>
    <innernamespace refid="namespaceboost_1_1process_1_1detail">boost::process::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Includes the declaration of the posix_child class. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Boost.Process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2006<sp/>Julio<sp/>M.<sp/>Merino<sp/>Vidal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.boost.org/LICENSE_1_0.txt.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(BOOST_PROCESS_POSIX_CHILD_HPP)</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor">#define<sp/>BOOST_PROCESS_POSIX_CHILD_HPP</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="config_8hpp" kindref="compound">boost/process/config.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(BOOST_PROCESS_POSIX_API)</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;Unsupported<sp/>platform.&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="child_8hpp" kindref="compound">boost/process/child.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/process/detail/pipe.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/process/detail/posix_ops.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pistream_8hpp" kindref="compound">boost/process/pistream.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="postream_8hpp" kindref="compound">boost/process/postream.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">process<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">factories;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classboost_1_1process_1_1posix__child" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1process_1_1posix__child" kindref="compound">posix_child</ref><sp/>:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1process_1_1child" kindref="compound">child</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1process_1_1postream" kindref="compound">postream</ref>&amp;<sp/><ref refid="classboost_1_1process_1_1posix__child_1b1345d2e5fee4777707c959c324a184f" kindref="member">get_input</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desc)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1process_1_1pistream" kindref="compound">pistream</ref>&amp;<sp/><ref refid="classboost_1_1process_1_1posix__child_11e5b99598124ebe4ee3c338d38120a94" kindref="member">get_output</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desc)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>int,<sp/>boost::shared_ptr&lt;<sp/>postream<sp/>&gt;<sp/>&gt;<sp/>input_map;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>int,<sp/>boost::shared_ptr&lt;<sp/>pistream<sp/>&gt;<sp/>&gt;<sp/>output_map;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>input_map<sp/>m_input_map;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>output_map<sp/>m_output_map;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1process_1_1posix__child_10be743fa6dda2b4f80a6563016ef4a9e" kindref="member">posix_child</ref>(<ref refid="classboost_1_1process_1_1child_123c957bf6f18f185a9fd560efa9cb4b9" kindref="member">handle_type</ref><sp/>h,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::info_map&amp;<sp/>infoin,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::info_map&amp;<sp/>infoout);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">detail::factories;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classboost_1_1process_1_1posix__child_10be743fa6dda2b4f80a6563016ef4a9e" refkind="member"><highlight class="normal"><ref refid="classboost_1_1process_1_1posix__child_10be743fa6dda2b4f80a6563016ef4a9e" kindref="member">posix_child::posix_child</ref>(handle_type<sp/>h,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::info_map&amp;<sp/>infoin,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::info_map&amp;<sp/>infoout)<sp/>:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1process_1_1child" kindref="compound">child</ref>(h,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posix_info_locate_pipe(infoin,<sp/>STDIN_FILENO,<sp/>false),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posix_info_locate_pipe(infoout,<sp/>STDOUT_FILENO,<sp/>true),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posix_info_locate_pipe(infoout,<sp/>STDERR_FILENO,<sp/>true))</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(detail::info_map::iterator<sp/>iter<sp/>=<sp/>infoin.begin();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>infoin.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::stream_info&amp;<sp/>si<sp/>=<sp/>(*iter).second;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(si.m_type<sp/>==<sp/>detail::stream_info::usepipe)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSERT(si.m_pipe-&gt;wend().is_valid());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;<sp/>postream<sp/>&gt;<sp/>st(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1process_1_1postream" kindref="compound">postream</ref>(si.m_pipe-&gt;wend()));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_input_map.insert(input_map::value_type((*iter).first,<sp/>st));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(detail::info_map::iterator<sp/>iter<sp/>=<sp/>infoout.begin();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>infoout.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::stream_info&amp;<sp/>si<sp/>=<sp/>(*iter).second;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(si.m_type<sp/>==<sp/>detail::stream_info::usepipe)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSERT(si.m_pipe-&gt;rend().is_valid());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;<sp/>pistream<sp/>&gt;<sp/>st(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1process_1_1pistream" kindref="compound">pistream</ref>(si.m_pipe-&gt;rend()));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_output_map.insert(output_map::value_type((*iter).first,<sp/>st));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="classboost_1_1process_1_1postream" kindref="compound">postream</ref>&amp;</highlight></codeline>
<codeline lineno="185" refid="classboost_1_1process_1_1posix__child_1b1345d2e5fee4777707c959c324a184f" refkind="member"><highlight class="normal"><ref refid="classboost_1_1process_1_1posix__child_1b1345d2e5fee4777707c959c324a184f" kindref="member">posix_child::get_input</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desc)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="186"><highlight class="keyword"><sp/><sp/><sp/><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc<sp/>==<sp/>STDIN_FILENO)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1process_1_1child_198668ffd20b860848b2dba06bf7238a0" kindref="member">posix_child::get_stdin</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_map::const_iterator<sp/>iter<sp/>=<sp/>m_input_map.find(desc);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSERT(iter<sp/>!=<sp/>m_input_map.end());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*((*iter).second);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="classboost_1_1process_1_1pistream" kindref="compound">pistream</ref>&amp;</highlight></codeline>
<codeline lineno="201" refid="classboost_1_1process_1_1posix__child_11e5b99598124ebe4ee3c338d38120a94" refkind="member"><highlight class="normal"><ref refid="classboost_1_1process_1_1posix__child_11e5b99598124ebe4ee3c338d38120a94" kindref="member">posix_child::get_output</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desc)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="202"><highlight class="keyword"><sp/><sp/><sp/><sp/>const</highlight></codeline>
<codeline lineno="203"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc<sp/>==<sp/>STDOUT_FILENO)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1process_1_1child_119f67d7222fbd06d0b5bed36a8bbf615" kindref="member">posix_child::get_stdout</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc<sp/>==<sp/>STDERR_FILENO)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1process_1_1child_1e21a8cc758c37037723aab198a0cbe65" kindref="member">posix_child::get_stderr</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_map::const_iterator<sp/>iter<sp/>=<sp/>m_output_map.find(desc);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSERT(iter<sp/>!=<sp/>m_output_map.end());</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*((*iter).second);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!defined(BOOST_PROCESS_POSIX_CHILD_HPP)</highlight></codeline>
    </programlisting>
    <location file="/tmp/process.016638aa/process/boost/process/posix_child.hpp"/>
  </compounddef>
</doxygen>
