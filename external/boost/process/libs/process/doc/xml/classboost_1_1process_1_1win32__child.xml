<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="classboost_1_1process_1_1win32__child" kind="class" prot="public">
    <compoundname>boost::process::win32_child</compoundname>
    <basecompoundref refid="classboost_1_1process_1_1child" prot="public" virt="non-virtual">boost::process::child</basecompoundref>
    <includes refid="win32__child_8hpp" local="no">win32_child.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1process_1_1win32__child_1c2521bc844c4c8f008269b1ef921daeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>DWORD</type>
        <definition>DWORD boost::process::win32_child::get_id</definition>
        <argsstring>(void) const </argsstring>
        <name>get_id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the process&apos; identifier. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a system-wide value that identifies the process. This is the value of the <emphasis>dwProcessId</emphasis> field in the PROCESS_INFORMATION structure returned by CreateProcess().</para><para><simplesect kind="see"><para><ref refid="classboost_1_1process_1_1child_1f5aa0a4c094e51d4d2736472acec6893" kindref="member">get_handle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/win32_child.hpp" line="103" bodyfile="/tmp/process.016638aa/process/boost/process/win32_child.hpp" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1process_1_1win32__child_1ded488b0e5c4a2140768388716f27e51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE boost::process::win32_child::get_primary_thread_handle</definition>
        <argsstring>(void) const </argsstring>
        <name>get_primary_thread_handle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the primary thread&apos;s handle. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a handle to the primary thread of the new process. This is the value of the <emphasis>hThread</emphasis> field in the PROCESS_INFORMATION structure returned by CreateProcess().</para><para><simplesect kind="see"><para><ref refid="classboost_1_1process_1_1win32__child_112fc7acb5cf601dd497a6b7d45b341f8" kindref="member">get_primary_thread_id()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/win32_child.hpp" line="114" bodyfile="/tmp/process.016638aa/process/boost/process/win32_child.hpp" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1process_1_1win32__child_112fc7acb5cf601dd497a6b7d45b341f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>DWORD</type>
        <definition>DWORD boost::process::win32_child::get_primary_thread_id</definition>
        <argsstring>(void) const </argsstring>
        <name>get_primary_thread_id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the primary thread&apos;s identifier. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a system-wide value that identifies the process&apos;s primary thread. This is the value of the <emphasis>dwThreadId</emphasis> field in the PROCESS_INFORMATION structure returned by CreateProcess().</para><para><simplesect kind="see"><para><ref refid="classboost_1_1process_1_1win32__child_1ded488b0e5c4a2140768388716f27e51" kindref="member">get_primary_thread_handle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/win32_child.hpp" line="125" bodyfile="/tmp/process.016638aa/process/boost/process/win32_child.hpp" bodystart="164" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classboost_1_1process_1_1win32__child_19628f18c01b1922f66fe212fb1f80bb9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::process::win32_child::win32_child</definition>
        <argsstring>(const PROCESS_INFORMATION &amp;pi, detail::file_handle fhstdin, detail::file_handle fhstdout, detail::file_handle fhstderr)</argsstring>
        <name>win32_child</name>
        <param>
          <type>const PROCESS_INFORMATION &amp;</type>
          <declname>pi</declname>
        </param>
        <param>
          <type>detail::file_handle</type>
          <declname>fhstdin</declname>
        </param>
        <param>
          <type>detail::file_handle</type>
          <declname>fhstdout</declname>
        </param>
        <param>
          <type>detail::file_handle</type>
          <declname>fhstderr</declname>
        </param>
        <briefdescription>
<para>Constructs a new Win32 child object representing a just spawned child process. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a new child object that represents the process described by the <emphasis>si</emphasis> structure.</para><para>The <emphasis>fhstdin</emphasis>, <emphasis>fhstdout</emphasis> and <emphasis>fhstderr</emphasis> parameters hold the communication streams used to interact with the child process if the launcher configured redirections. See the parent class&apos; constructor for more details on these.</para><para>This constructor is protected because the library user has no business in creating representations of live processes himself; the library takes care of that in all cases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/win32_child.hpp" line="90" bodyfile="/tmp/process.016638aa/process/boost/process/win32_child.hpp" bodystart="131" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1process_1_1win32__child_18d45342c43dbb8bfc9138c11dc69d273" prot="private" static="no" mutable="no">
        <type>PROCESS_INFORMATION</type>
        <definition>PROCESS_INFORMATION boost::process::win32_child::m_process_information</definition>
        <argsstring></argsstring>
        <name>m_process_information</name>
        <briefdescription>
<para>Win32-specific process information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/win32_child.hpp" line="68" bodyfile="/tmp/process.016638aa/process/boost/process/win32_child.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classboost_1_1process_1_1win32__child_1af0c8a49488c2645b5dbabee439d5fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct detail::factories</definition>
        <argsstring></argsstring>
        <name>detail::factories</name>
        <reimplements refid="classboost_1_1process_1_1child_1af0c8a49488c2645b5dbabee439d5fac">detail::factories</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/win32_child.hpp" line="91" bodyfile="/tmp/process.016638aa/process/boost/process/win32_child.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Win32 implementation of the Child concept. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classboost_1_1process_1_1win32__child" kindref="compound">win32_child</ref> class implements the Child concept in a Win32 operating system.</para><para>A Win32 child differs from a regular child (represented by a child object) in that it holds additional information about a process. Aside from the standard handle, it also includes a handle to the process&apos; main thread, together with identifiers to both entities.</para><para>This class is built on top of the generic child so as to allow its trivial adoption. When a program is changed to use the Win32-specific launcher (<ref refid="classboost_1_1process_1_1win32__launcher" kindref="compound">win32_launcher</ref>), it will most certainly need to migrate its use of the child class to <ref refid="classboost_1_1process_1_1win32__child" kindref="compound">win32_child</ref>. Doing so is only a matter of redefining the appropriate object and later using the required extra features: there should be no need to modify the existing code (e.g. method calls) in any other way. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="41">
        <label>boost::process::child</label>
        <link refid="classboost_1_1process_1_1child"/>
      </node>
      <node id="40">
        <label>boost::process::win32_child</label>
        <link refid="classboost_1_1process_1_1win32__child"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="43">
        <label>boost::process::child</label>
        <link refid="classboost_1_1process_1_1child"/>
      </node>
      <node id="42">
        <label>boost::process::win32_child</label>
        <link refid="classboost_1_1process_1_1win32__child"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/tmp/process.016638aa/process/boost/process/win32_child.hpp" line="64" bodyfile="/tmp/process.016638aa/process/boost/process/win32_child.hpp" bodystart="62" bodyend="126"/>
    <listofallmembers>
      <member refid="classboost_1_1process_1_1child_1a899830c825cc53ecc422f2915959fc7" prot="protected" virt="non-virtual"><scope>boost::process::win32_child</scope><name>child</name></member>
      <member refid="classboost_1_1process_1_1win32__child_1af0c8a49488c2645b5dbabee439d5fac" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>detail::factories</name></member>
      <member refid="classboost_1_1process_1_1child_1f5aa0a4c094e51d4d2736472acec6893" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>get_handle</name></member>
      <member refid="classboost_1_1process_1_1win32__child_1c2521bc844c4c8f008269b1ef921daeb" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>get_id</name></member>
      <member refid="classboost_1_1process_1_1win32__child_1ded488b0e5c4a2140768388716f27e51" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>get_primary_thread_handle</name></member>
      <member refid="classboost_1_1process_1_1win32__child_112fc7acb5cf601dd497a6b7d45b341f8" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>get_primary_thread_id</name></member>
      <member refid="classboost_1_1process_1_1child_1e21a8cc758c37037723aab198a0cbe65" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>get_stderr</name></member>
      <member refid="classboost_1_1process_1_1child_198668ffd20b860848b2dba06bf7238a0" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>get_stdin</name></member>
      <member refid="classboost_1_1process_1_1child_119f67d7222fbd06d0b5bed36a8bbf615" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>get_stdout</name></member>
      <member refid="classboost_1_1process_1_1child_123c957bf6f18f185a9fd560efa9cb4b9" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>handle_type</name></member>
      <member refid="classboost_1_1process_1_1win32__child_18d45342c43dbb8bfc9138c11dc69d273" prot="private" virt="non-virtual"><scope>boost::process::win32_child</scope><name>m_process_information</name></member>
      <member refid="classboost_1_1process_1_1child_1c792e2fe261eb08b1a43e6fa7da408a4" prot="public" virt="non-virtual"><scope>boost::process::win32_child</scope><name>wait</name></member>
      <member refid="classboost_1_1process_1_1win32__child_19628f18c01b1922f66fe212fb1f80bb9" prot="protected" virt="non-virtual"><scope>boost::process::win32_child</scope><name>win32_child</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
