<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="classboost_1_1process_1_1launcher" kind="class" prot="public">
    <compoundname>boost::process::launcher</compoundname>
    <derivedcompoundref refid="classboost_1_1process_1_1posix__launcher" prot="public" virt="non-virtual">boost::process::posix_launcher</derivedcompoundref>
    <derivedcompoundref refid="classboost_1_1process_1_1win32__launcher" prot="public" virt="non-virtual">boost::process::win32_launcher</derivedcompoundref>
    <includes refid="launcher_8hpp" local="no">launcher.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1process_1_1launcher_1bdde7d5fef9d4c2248f72ecadf1a119a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
            <declname>Command_Line</declname>
            <defname>Command_Line</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classboost_1_1process_1_1child" kindref="compound">child</ref></type>
        <definition>child boost::process::launcher::start</definition>
        <argsstring>(const Command_Line &amp;cl)</argsstring>
        <name>start</name>
        <reimplementedby refid="classboost_1_1process_1_1win32__launcher_1712c43306610d91d4df0e28de36900f5">start</reimplementedby>
        <reimplementedby refid="classboost_1_1process_1_1posix__launcher_10793b9bb9cc65d7f0c87b5761efdd6c4">start</reimplementedby>
        <param>
          <type>const Command_Line &amp;</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
<para>Starts a new child process. </para>        </briefdescription>
        <detaileddescription>
<para>Given a command line <emphasis>cl</emphasis>, starts a new process with all the parameters configured in the launcher. The launcher can be reused afterwards to launch other different command lines.</para><para><simplesect kind="remark"><para><bold>Blocking remarks</bold>: This function may block if the device holding the command line&apos;s executable blocks when loading the image. This might happen if, e.g., the binary is being loaded from a network share.</para></simplesect>
<simplesect kind="return"><para>A handle to the new child process. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/launcher.hpp" line="73" bodyfile="/tmp/process.016638aa/process/boost/process/launcher.hpp" bodystart="81" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic implementation of the Launcher concept. </para>    </briefdescription>
    <detaileddescription>
<para>The launcher class implements the Launcher concept in an operating system agnostic way; it allows spawning new child process using a single and common interface across different systems. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>boost::process::posix_launcher</label>
        <link refid="classboost_1_1process_1_1posix__launcher"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>boost::process::win32_launcher</label>
        <link refid="classboost_1_1process_1_1win32__launcher"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>boost::process::launcher</label>
        <link refid="classboost_1_1process_1_1launcher"/>
      </node>
    </inheritancegraph>
    <location file="/tmp/process.016638aa/process/boost/process/launcher.hpp" line="56" bodyfile="/tmp/process.016638aa/process/boost/process/launcher.hpp" bodystart="54" bodyend="74"/>
    <listofallmembers>
      <member refid="classboost_1_1process_1_1launcher_1bdde7d5fef9d4c2248f72ecadf1a119a" prot="public" virt="non-virtual"><scope>boost::process::launcher</scope><name>start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
