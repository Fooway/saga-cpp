<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="classboost_1_1process_1_1not__found__error" kind="class" prot="public">
    <compoundname>boost::process::not_found_error</compoundname>
    <includes refid="exceptions_8hpp" local="no">exceptions.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1process_1_1not__found__error_156da8cc1533d15b67c1804fdf29b10b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::process::not_found_error&lt; T &gt;::not_found_error</definition>
        <argsstring>(const std::string &amp;message, const T &amp;value)</argsstring>
        <name>not_found_error</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Constructs a new exception. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs a new exception based on an error message and the value that could not be found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="216" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="241" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1process_1_1not__found__error_184a7c95b1a1e42e2126330601ef5b9f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>virtual</type>
        <definition>boost::process::not_found_error&lt; T &gt;::~not_found_error</definition>
        <argsstring>(void)</argsstring>
        <name>~not_found_error</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Virtual destructor that does nothing. </para>        </briefdescription>
        <detaileddescription>
<para>Virtual destructor. Does nothing special but is required because of the parent&apos;s class destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="224" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1process_1_1not__found__error_1cab0d06c866b238c527af963cf288cde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; boost::process::not_found_error&lt; T &gt;::get_value</definition>
        <argsstring>(void) const </argsstring>
        <name>get_value</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Returns a copy of the value that could not be found. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a copy of the value that could not be found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="231" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="263" bodyend="268"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1process_1_1not__found__error_12484411bbf02d939648082d9dcd7974a" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T boost::process::not_found_error&lt; T &gt;::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="234" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Indicates that an element could not be found. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classboost_1_1process_1_1not__found__error" kindref="compound">not_found_error</ref> exception indicates the that an expected element could not be found. The class is parametrized on the element type so that it can carry a copy of the failing value. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="18">
        <label>T</label>
      </node>
      <node id="17">
        <label>boost::process::not_found_error&lt; T &gt;</label>
        <link refid="classboost_1_1process_1_1not__found__error"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_value</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/tmp/process.016638aa/process/boost/process/exceptions.hpp" line="208" bodyfile="/tmp/process.016638aa/process/boost/process/exceptions.hpp" bodystart="206" bodyend="235"/>
    <listofallmembers>
      <member refid="classboost_1_1process_1_1not__found__error_1cab0d06c866b238c527af963cf288cde" prot="public" virt="non-virtual"><scope>boost::process::not_found_error</scope><name>get_value</name></member>
      <member refid="classboost_1_1process_1_1not__found__error_12484411bbf02d939648082d9dcd7974a" prot="private" virt="non-virtual"><scope>boost::process::not_found_error</scope><name>m_value</name></member>
      <member refid="classboost_1_1process_1_1not__found__error_156da8cc1533d15b67c1804fdf29b10b9" prot="public" virt="non-virtual"><scope>boost::process::not_found_error</scope><name>not_found_error</name></member>
      <member refid="classboost_1_1process_1_1not__found__error_184a7c95b1a1e42e2126330601ef5b9f9" prot="public" virt="virtual"><scope>boost::process::not_found_error</scope><name>~not_found_error</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
