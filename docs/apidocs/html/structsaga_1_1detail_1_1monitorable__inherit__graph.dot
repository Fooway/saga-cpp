digraph G
{
  bgcolor="transparent";
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{saga::detail::monitorable\< Derived \>\n||+ list_metrics()\l+ get_metric()\l+ add_callback()\l+ remove_callback()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="orange",fontsize="10",style="solid",label=" \< entry \>" ,fontname="FreeSans"];
  Node2 [label="{saga::detail::monitorable\< entry \>\n||+ list_metrics()\l+ get_metric()\l+ add_callback()\l+ remove_callback()\l}",height=0.2,width=0.4,color="black",URL="$structsaga_1_1detail_1_1monitorable.html"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node3 [label="{saga::name_space::entry\n||+ entry()\l+ entry()\l+ entry()\l+ entry()\l+ ~entry()\l+ operator=()\l+ get_url()\l+ get_cwd()\l+ get_name()\l+ read_link()\l+ is_dir()\l+ is_entry()\l+ is_link()\l+ copy()\l+ link()\l+ move()\l+ remove()\l+ close()\l+ permissions_allow()\l+ permissions_deny()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1name__space_1_1entry.html",tooltip="An RNS entry that interconnects a reference to an existing resource into the hierarchical name space..."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node4 [label="{saga::advert::entry\n||+ entry()\l+ entry()\l+ entry()\l+ entry()\l+ ~entry()\l+ store_object()\l+ store_object()\l+ retrieve_object()\l+ retrieve_object()\l+ retrieve_object()\l+ store_string()\l+ retrieve_string()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1advert_1_1entry.html",tooltip="The advert class represents an entry in a saga::advert::directory. An advert directory is a meta data..."];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node5 [label="{saga::cpr::checkpoint\n||}",height=0.2,width=0.4,color="grey75",tooltip="The saga::replica class implements the saga::attributes interface."];
  Node3 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node6 [label="{saga::filesystem::file\n||+ file()\l+ file()\l+ file()\l+ file()\l+ ~file()\l+ operator=()\l+ get_size()\l+ read()\l+ write()\l+ seek()\l+ read_v()\l+ write_v()\l+ size_p()\l+ read_p()\l+ write_p()\l+ modes_e()\l+ size_e()\l+ read_e()\l+ write_e()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1filesystem_1_1file.html",tooltip="The SAGA file package file API."];
  Node3 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node7 [label="{saga::name_space::directory\n||+ directory()\l+ directory()\l+ directory()\l+ directory()\l+ ~directory()\l+ operator=()\l+ change_dir()\l+ list()\l+ find()\l+ read_link()\l+ exists()\l+ is_dir()\l+ is_entry()\l+ is_link()\l+ get_num_entries()\l+ get_entry()\l+ copy()\l+ copy()\l+ copy()\l+ link()\l+ link()\l+ link()\l+ move()\l+ move()\l+ move()\l+ remove()\l+ remove()\l+ remove()\l+ make_dir()\l+ open()\l+ open_dir()\l+ permissions_allow()\l+ permissions_deny()\l+ permissions_allow()\l+ permissions_deny()\l+ permissions_allow()\l+ permissions_deny()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1name__space_1_1directory.html",tooltip="A &quot;Virtual Directory&quot;, an RNS entry that is represented as a non-leaf node in the hierarchical name s..."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node8 [label="{saga::advert::directory\n||+ directory()\l+ directory()\l+ directory()\l+ directory()\l+ ~directory()\l+ operator=()\l+ open()\l+ open_dir()\l+ find()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1advert_1_1directory.html",tooltip="The directory class represents a directory within a meta data directory with a hierarchical namespace..."];
  Node7 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node9 [label="{saga::cpr::directory\n||}",height=0.2,width=0.4,color="grey75",tooltip="A checkpoint directory contains, you guess it, checkpoints."];
  Node7 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node10 [label="{saga::filesystem::directory\n||+ directory()\l+ directory()\l+ directory()\l+ directory()\l+ ~directory()\l+ operator=()\l+ get_size()\l+ is_file()\l+ open()\l+ open_dir()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1filesystem_1_1directory.html",tooltip="The SAGA file package directory API."];
  Node7 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node11 [label="{saga::replica::logical_directory\n||+ logical_directory()\l+ logical_directory()\l+ logical_directory()\l+ logical_directory()\l+ ~logical_directory()\l+ operator=()\l+ is_file()\l+ open()\l+ open_dir()\l+ find()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1replica_1_1logical__directory.html",tooltip="A logical directory represents a directory entry in the name space of logical files."];
  Node3 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node12 [label="{saga::replica::logical_file\n||+ logical_file()\l+ logical_file()\l+ logical_file()\l+ logical_file()\l+ ~logical_file()\l+ operator=()\l+ add_location()\l+ remove_location()\l+ update_location()\l+ list_locations()\l+ replicate()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1replica_1_1logical__file.html",tooltip="The saga::replica class implements the saga::attributes interface."];
  Node1 -> Node13 [dir="back",color="orange",fontsize="10",style="solid",label=" \< server \>" ,fontname="FreeSans"];
  Node13 [label="{saga::detail::monitorable\< server \>\n||+ list_metrics()\l+ get_metric()\l+ add_callback()\l+ remove_callback()\l}",height=0.2,width=0.4,color="black",URL="$structsaga_1_1detail_1_1monitorable.html"];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node14 [label="{saga::stream::server\n||+ server()\l+ server()\l+ server()\l+ server()\l+ ~server()\l+ operator=()\l+ get_url()\l+ connect()\l+ serve()\l+ close()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1stream_1_1server.html",tooltip="The stream_server object establishes a listening/server object that waits for client connections..."];
  Node1 -> Node15 [dir="back",color="orange",fontsize="10",style="solid",label=" \< task_container \>" ,fontname="FreeSans"];
  Node15 [label="{saga::detail::monitorable\< task_container \>\n||+ list_metrics()\l+ get_metric()\l+ add_callback()\l+ remove_callback()\l}",height=0.2,width=0.4,color="black",URL="$structsaga_1_1detail_1_1monitorable.html"];
  Node15 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node16 [label="{saga::task_container\n||+ task_container()\l+ ~task_container()\l+ run()\l+ add_task()\l+ remove_task()\l+ list_tasks()\l+ get_states()\l+ cancel()\l+ wait()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1task__container.html",tooltip="Handles a large number of asynchronous operations."];
  Node1 -> Node17 [dir="back",color="orange",fontsize="10",style="solid",label=" \< task \>" ,fontname="FreeSans"];
  Node17 [label="{saga::detail::monitorable\< task \>\n||+ list_metrics()\l+ get_metric()\l+ add_callback()\l+ remove_callback()\l}",height=0.2,width=0.4,color="black",URL="$structsaga_1_1detail_1_1monitorable.html"];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node18 [label="{saga::task\n||+ task()\l+ task()\l+ ~task()\l+ run()\l+ cancel()\l+ wait()\l+ get_state()\l+ rethrow()\l+ get_object()\l+ get_result()\l+ get_result()\l+ get_result()\l+ get_result()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1task.html",tooltip="Brief description starts here."];
  Node18 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node19 [label="{saga::job::job\n||+ job()\l+ job()\l+ ~job()\l+ operator=()\l+ get_job_id()\l+ run()\l+ wait()\l+ cancel()\l+ get_state()\l+ get_description()\l+ get_stdin()\l+ get_stdout()\l+ get_stderr()\l+ suspend()\l+ resume()\l+ checkpoint()\l+ migrate()\l+ signal()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1job_1_1job.html",tooltip="The job provides the manageability interface to a job instance submitted to a resource manager..."];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node20 [label="{saga::cpr::job\n||}",height=0.2,width=0.4,color="grey75",tooltip="The job is a saga::job with additional checkpoint and recovery related methods."];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node21 [label="{saga::cpr::self\n||}",height=0.2,width=0.4,color="grey75",tooltip="The job_self class is a job which represents the current application."];
  Node19 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node22 [label="{saga::job::self\n||+ self()\l+ ~self()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1job_1_1self.html",tooltip="The job_self class is a job which represents the current application."];
  Node1 -> Node23 [dir="back",color="orange",fontsize="10",style="solid",label=" \< stream \>" ,fontname="FreeSans"];
  Node23 [label="{saga::detail::monitorable\< stream \>\n||+ list_metrics()\l+ get_metric()\l+ add_callback()\l+ remove_callback()\l}",height=0.2,width=0.4,color="black",URL="$structsaga_1_1detail_1_1monitorable.html"];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node24 [label="{saga::stream::stream\n||+ stream()\l+ stream()\l+ stream()\l+ stream()\l+ ~stream()\l+ operator=()\l+ get_url()\l+ get_context()\l+ connect()\l+ wait()\l+ close()\l+ read()\l+ write()\l+ create()\l+ create()\l+ create()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1stream_1_1stream.html",tooltip="This is the ob ject that encapsulates all client stream ob jects."];
}
