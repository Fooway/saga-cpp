digraph G
{
  bgcolor="transparent";
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{saga::task\n||+ task()\l+ task()\l+ ~task()\l+ run()\l+ cancel()\l+ wait()\l+ get_state()\l+ rethrow()\l+ get_object()\l+ get_result()\l+ get_result()\l+ get_result()\l+ get_result()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node2 [label="{saga::object\n||+ object()\l+ get_type()\l+ get_id()\l+ get_session()\l+ get_session()\l+ clone()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1object.html",tooltip="Brief description starts here."];
  Node3 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node3 [label="{saga::detail::monitorable\< task \>\n||+ list_metrics()\l+ get_metric()\l+ add_callback()\l+ remove_callback()\l}",height=0.2,width=0.4,color="black",URL="$structsaga_1_1detail_1_1monitorable.html"];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="solid",label=" \< task \>" ,fontname="FreeSans"];
  Node4 [label="{saga::detail::monitorable\< Derived \>\n||+ list_metrics()\l+ get_metric()\l+ add_callback()\l+ remove_callback()\l}",height=0.2,width=0.4,color="black",URL="$structsaga_1_1detail_1_1monitorable.html",tooltip="The SAGA monitorable interface."];
  Node5 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node5 [label="{saga::task_base\n||}",height=0.2,width=0.4,color="black",URL="$structsaga_1_1task__base.html",tooltip="Brief description starts here."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node6 [label="{saga::job::job\n||+ job()\l+ job()\l+ ~job()\l+ operator=()\l+ get_job_id()\l+ run()\l+ wait()\l+ cancel()\l+ get_state()\l+ get_description()\l+ get_stdin()\l+ get_stdout()\l+ get_stderr()\l+ suspend()\l+ resume()\l+ checkpoint()\l+ migrate()\l+ signal()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1job_1_1job.html",tooltip="The job provides the manageability interface to a job instance submitted to a resource manager..."];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node7 [label="{saga::cpr::job\n||}",height=0.2,width=0.4,color="grey75",tooltip="The job is a saga::job with additional checkpoint and recovery related methods."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node8 [label="{saga::cpr::self\n||}",height=0.2,width=0.4,color="grey75",tooltip="The job_self class is a job which represents the current application."];
  Node6 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node9 [label="{saga::job::self\n||+ self()\l+ ~self()\l}",height=0.2,width=0.4,color="black",URL="$classsaga_1_1job_1_1self.html",tooltip="The job_self class is a job which represents the current application."];
}
